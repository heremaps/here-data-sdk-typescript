image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_IMAGE_VERSION}

stages:
  - post_release_test
  - performance_test
  - security_test
  - translate_report
  - deploy

rv_job:
  stage: post_release_test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - yarn
  - yarn bootstrap
  - npm run build
  - npm run test-published-bundles
  when: manual
  only:
    - master

wv_veracode_job:
  stage: security_test
  tags:
  - docker-prod
  script:
  - $CI_PROJECT_DIR/scripts/veracode/veracodeUpload.sh build/olp-edge-ts.zip OLP_EDGE_CI@here.com
  only:
    refs:
      - master
      - schedules
    variables:
      - $VERACODE
  artifacts:
    when: always
    paths:
      - build
    expire_in: 1 year # save our zip for 1 year as job artifacts
nv_job:
  stage: performance_test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_test_performance.sh
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_test_publish_dryrun.sh
  only:
    refs:
      - master
      - schedules
    variables:
      - $NIGHTLY
  artifacts:
    when: always
    paths:
      - ./*.gz
      - ./*.html
      - cache
      - heaptrack
      - reports
    expire_in: 1 year # save our archives for 1 year as job artifacts
wv_job:
  stage: performance_test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux/wv/gitlab_test_performance_extended.sh
  only:
    refs:
      - master
      - schedules
    variables:
      - $WEEKLY
  artifacts:
    when: always
    paths:
      - ./*.gz
      - ./*.html
      - cache
      - heaptrack
      - reports
    expire_in: 1 year # save our archives for 1 year as job artifacts
    
    # next stages will run on NV and WK jobs

translate_report:
  stage: translate_report
  tags:
  - docker-prod
  image: python:3.6
  when: always
  before_script:
    - pip install junit2html
  script:
    # - python -m junit2htmlreport --report-matrix reports/index.html reports/*.xml
    - if [ "$NIGHTLY" == "1" ]; then cat heaptrack_report.html >> reports/index.html; fi
    - if [ "$WEEKLY" == "1" ]; then cat heaptrack_report.html >> reports/index.html; fi
    - mkdir -p .public
    - cp reports/*.html .public/
  artifacts:
    paths:
      - .public
  only:
    refs:
      - master
      - schedules
    variables:
      - $WEEKLY
      - $NIGHTLY

pages:
  stage: deploy
  tags:
    - docker-prod
  when: always
  script: mv .public public
  artifacts:
    paths:
      - public
    expire_in: 1 year
  only:
    refs:
      - master
      - schedules
    variables:
      - $WEEKLY
      - $NIGHTLY


