image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_IMAGE_VERSION}

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml

stages:
  - test
  - translate_report
  - deploy

regression_test_job:
  stage: test
  when: manual
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - npm install -g yarn
  - yarn
  - yarn bootstrap
  - npm run build --loglevel verbose
  - npm run test --loglevel verbose
  - npm run integration-test --loglevel verbose
  - npm run functional-test --loglevel verbose
  - npm run api-breaks-test --loglevel verbose
  - cp ./tests/integration/api-breaks/xunit.xml $CI_PROJECT_DIR/api-breaks-xunit.xml
  - cp ./tests/integration/xunit.xml $CI_PROJECT_DIR/integration-xunit.xml
  - cp ./tests/functional/xunit.xml $CI_PROJECT_DIR/functional-xunit.xml
  - cp ./@here/olp-sdk-authentication/xunit.xml $CI_PROJECT_DIR/olp-sdk-authentication-xunit.xml
  - cp ./@here/olp-sdk-core/xunit.xml $CI_PROJECT_DIR/olp-sdk-core-xunit.xml
  - cp ./@here/olp-sdk-dataservice-api/xunit.xml $CI_PROJECT_DIR/olp-sdk-dataservice-api-xunit.xml
  - cp ./@here/olp-sdk-dataservice-read/xunit.xml $CI_PROJECT_DIR/olp-sdk-dataservice-read-xunit.xml
  - cp ./@here/olp-sdk-dataservice-write/xunit.xml $CI_PROJECT_DIR/olp-sdk-dataservice-write-xunit.xml
  - cp ./@here/olp-sdk-fetch/xunit.xml $CI_PROJECT_DIR/olp-sdk-fetch-xunit.xml
  only:
    - master
    - branches
  artifacts:
    when: always
    paths:
      - ./*.xml
    expire_in: 1 year # save for 1 year as job artifacts

regression_generate_report_job:
  stage: translate_report
  when: manual
  tags:
  - docker-prod
  image: python:3.8
  before_script:
    - pip install junit2html==26
  script:
    - python -m junit2htmlreport --report-matrix api-breaks-index.html ./api-breaks-xunit.xml
    - python -m junit2htmlreport --report-matrix fetch-index.html ./olp-sdk-fetch-xunit.xml
    - python -m junit2htmlreport --report-matrix integration-index.html ./integration-xunit.xml
    - python -m junit2htmlreport --report-matrix functional-index.html ./functional-xunit.xml
    - python -m junit2htmlreport --report-matrix authentication-index.html ./olp-sdk-authentication-xunit.xml
    - python -m junit2htmlreport --report-matrix core-index.html ./olp-sdk-core-xunit.xml
    - python -m junit2htmlreport --report-matrix dataservice-api-index.html ./olp-sdk-dataservice-api-xunit.xml
    - python -m junit2htmlreport --report-matrix dataservice-read-index.html ./olp-sdk-dataservice-read-xunit.xml
    - python -m junit2htmlreport --report-matrix dataservice-write-index.html ./olp-sdk-dataservice-write-xunit.xml
    - ./scripts/misc/full_report_generation.sh
    - if $(ls $CI_PROJECT_DIR/index.html &>/dev/null); then tar -czf ${CI_JOB_NAME}_test_reports.tar.gz --directory=$CI_PROJECT_DIR index.html ; fi;
    - $CI_PROJECT_DIR/scripts/misc/artifactory_upload.sh edge-sdks/sdk-for-typescript/test-reports/$CI_JOB_NAME/$CI_JOB_ID/${CI_JOB_NAME}_test_reports.tar.gz ${CI_JOB_NAME}_test_reports.tar.gz
  artifacts:
    paths:
      - .public
      - ./*.html
      - ./*.xml
    when: always
    expire_in: 3 yrs # save our zip for 3 years as job artifacts
  only:
    refs:
      - master
      - branches

nightly_perf_publish_test_job:
  stage: test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_test_performance.sh
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_test_publish_dryrun.sh
  - if $(ls $CI_PROJECT_DIR/*.html &>/dev/null); then tar -czf ${CI_JOB_NAME}_test_reports.tar.gz --directory=$CI_PROJECT_DIR *.html ; fi;
  - $CI_PROJECT_DIR/scripts/misc/artifactory_upload.sh edge-sdks/sdk-for-typescript/test-reports/$CI_JOB_NAME/$CI_JOB_ID/${CI_JOB_NAME}_test_reports.tar.gz ${CI_JOB_NAME}_test_reports.tar.gz
  only:
    refs:
      - master
      - schedules
    variables:
      - $NIGHTLY
  artifacts:
    when: always
    paths:
      - ./*.gz
      - ./*.html
      - cache
      - heaptrack
      - reports
    expire_in: 1 year # save our archives for 1 year as job artifacts

weekly_perf_test_job:
  stage: test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux/wv/gitlab_test_performance_extended.sh
  only:
    refs:
      - master
      - schedules
    variables:
      - $WEEKLY
  artifacts:
    when: always
    paths:
      - ./*.gz
      - ./*.html
      - cache
      - heaptrack
      - reports
    expire_in: 1 year # save our archives for 1 year as job artifacts
    
    # next stages will run on NV and WK jobs

generate_perf_report_job:
  stage: translate_report
  tags:
  - docker-prod
  image: python:3.6
  when: always
  before_script:
    - pip install junit2html
  script:
    - if [ "$NIGHTLY" == "1" ]; then cat heaptrack_report.html >> reports/index.html; fi
    - if [ "$WEEKLY" == "1" ]; then cat heaptrack_report.html >> reports/index.html; fi
    - mkdir -p .public
    - cp reports/*.html .public/
  artifacts:
    paths:
      - .public
  only:
    refs:
      - master
      - schedules
    variables:
      - $WEEKLY
      - $NIGHTLY

pages:
  stage: deploy
  tags:
    - docker-prod
  when: always
  script: mv .public public
  artifacts:
    paths:
      - public
    expire_in: 1 year
  only:
    refs:
      - master
      - schedules
    variables:
      - $WEEKLY
      - $NIGHTLY
